=================================
Github
=================================
1. Clone repository dans un dossier local (Un dossier est créé avec le nom du repo)
git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY
   ex1:
   git clone https://github.com/johanIbtaten/notes-johan.git (Un dossier notes-johan est créé)

   git clone https://github.com/johanIbtaten/notes-johan.git notes-apprentissage (Un dossier notes-apprentissage est créé)

   To clone git repo into the current and empty folder (Mettre un . à la fin)
   git clone https://github.com/accountName/repoName.git .

2. Pushing to a remote repository
git push  <REMOTENAME> <BRANCHNAME>
   ex1:
   git push origin master

3. Adding a remote in the directory your repository is stored at
git remote remove origin // Si on a cloné un repo distant d'une autre personne on supprime
                         // le lien au repo de la personne avant d'ajouter son propre repo distant
git remote add origin https://github.com/user/repo.git

4. Create a new local repository on the command line
echo "# notes-johan" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/johanIbtaten/notes-johan.git
git push -u origin master

5. Push an existing repository from the command line
git remote add origin https://github.com/johanIbtaten/notes-johan.git
git push -u origin master

6. Clone a Git repository into a specific folder. If you are in the directory you want.
git clone git@github.com:whatever .
// The "." at the end specifies the current folder as the checkout folder.

=================================
Git
=================================
1. Initialiser un dépôt Git local
	// A la racine du dossier qui contient le projet
	git init

2. Force overwrite of local file with what's it origin repo
	// Overwrite only one file
	git fetch
	git checkout origin/master <filepath>

	// Overwrite all changed files
	git fetch
	git reset --hard origin/master

3. Supprimer un repository local
	// Delete the .git directory in the root-directory of your repository 
	// if you only want to delete the git-related information (branches, versions).

	// If you want to delete everything (git-data, code, etc), just delete the whole directory.

4. Connaitre le status des fichiers
	git status

5. Stager tous les fichiers
	git add -A

6. Ecrire le message du commit
	git commit -m "Votre nouveau message"

7. Modifier le message du dernier commit, que si vous n'avez pas encore pushé votre commit sur l'origine !
	git commit --amend -m "Votre nouveau message" 

8. Se positionner sur un commit donné
	git checkout SHADuCommit

9. Revenir à votre branche principale (au commit le plus récent)
	git checkout master

10. Annuler un commit, c'est-à-dire créer un nouveau commit qui fait l'inverse du précédent
	git revert SHADuCommit

11. Annuler tous les changements que je n'ai pas encore commités.
	git reset --hard‌

12. Afficher tous les commits
	git log
	//Taper q  pour sortir de l'affichahe de git log quand on est dans la console

14. Forcer un push vers une branche distante si on a une erreur
type : "Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart."
	git push -f heroku master

