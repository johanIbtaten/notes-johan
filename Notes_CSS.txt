- @font-face Propriété
- object-fit Propriété
- object-position Propriété
- Superposer deux div avec flexbox

@font-face Propriété
-------------------------------
- La règle @font-face permet de définir les polices d'écriture à utiliser 
pour afficher le texte de pages web. Cette police peut être chargée depuis 
un serveur distant ou depuis l'ordinateur de l'utilisateur. 
Si la fonction local() est utilisée, elle indique à l'agent utilisateur 
de prendre en compte une police présente sur le poste de l'utilisateur.

- Les descripteurs.
font-display
Ce descripteur détermine la façon dont une fonte est affichée selon qu'elle a 
été téléchargée et/ou si elle est prête à être utilisée.

font-family
Ce descripteur définit un nom qui sera utilisé pour désigner 
cette police dans les différentes règles associées.

font-stretch
Une valeur font-stretch. Depuis Firefox 61 et pour les navigateurs récents, 
il est possible d'utiliser deux valeurs afin d'indiquer l'intervalle pris en charge 
par une fonte, par exemple : font-stretch: 50% 200%;.

font-style
Une valeur font-style. Depuis Firefox 61 et pour les navigateurs récents, il est possible 
d'utiliser deux valeurs afin d'indiquer l'intervalle pris en charge par une fonte, par exemple : font-style: oblique 20deg 50deg;.

font-variant
Une valeur font-variant.

font-weight
Une valeur font-weight. Depuis Firefox 61 et pour les navigateurs récents, il est possible d'utiliser deux valeurs afin d'indiquer l'intervalle pris en charge par une fonte, par exemple : font-weight: 100 400;.

font-feature-settings
Ce descripteur permet d'avoir un contrôle avancé sur les fonctionnalités typographiques relatives aux fontes OpenType.

font-variation-settings
Ce descripteur permet d'avoir un contrôle de bas niveau sur les variations des polices OpenType et TrueType en indiquant les nom des axes et des fonctionnalités à faire varier.

src
Indique la ressource qui contient les données pour la police d'écriture. Cela peut être une URL vers un fichier distant ou le nom d'une police de caractères présente sur l'ordinateur de l'utilisateur.

On peut fournir une indication de format au navigateur (afin que celui-ci sélectionne celui qui lui convient le mieux) sous la forme d'une fonction format() qui contient le type comme argument :

src: url(ideal-sans-serif.woff) format("woff"),
     url(basic-sans-serif.ttf) format("truetype");
Les types utilisables sont : "woff", "woff2", "truetype", "opentype", "embedded-opentype" et "svg".

unicode-range
L'intervalle des points de code Unicode pour lesquels la règle  @font-face s'applique.

Syntaxe formelle
@font-face {
  [ font-family: <family-name>; ] ||
  [ src: <src>; ] ||
  [ unicode-range: <unicode-range>; ] ||
  [ font-variant: <font-variant>; ] ||
  [ font-feature-settings: <font-feature-settings>; ] ||
  [ font-variation-settings: <font-variation-settings>; ] ||
  [ font-stretch: <font-stretch>; ] ||
  [ font-weight: <font-weight>; ] ||
  [ font-style: <font-style>; ]
}

EX:
// Font distante (qui n'est pas installée sur l'ordinateur de l'utilisateur)
@font-face {
  font-family: "Bitstream Vera Serif Bold";
  src: url("/static/styles/libs/font-awesome/fonts/fontawesome-webfont.fdf491ce5ff5.woff");
}

body {
  font-family: "Bitstream Vera Serif Bold", serif;
} 

EX:
// Font local et distante
// Ici, l'agent utilisateur tente d'utiliser la police Helvetica Neue Bold ou HelveticaNeue-Bold 
// si elle existe sur l'ordinateur de l'utilisateur. Sinon, il utilise la police distante MgOpenModernaBold.ttf.
@font-face {
  font-family: MaHelvetica;
  src: local("Helvetica Neue Bold"),
       local("HelveticaNeue-Bold"),
       url(MgOpenModernaBold.ttf);
  font-weight: bold;
}


object-fit Propriété
-------------------------------
1. La propriété CSS object-fit définit la façon dont le contenu d'un élément remplacé (<img> ou <video> par exemple) 
doit s'adapter à son conteneur en utilisant sa largeur et sa hauteur.

2. Selon la valeur utilisée pour object-fit, l'élément peut être rogné, mis à l'échelle ou étiré, 
afin de remplir la boîte qui le contient.

/* Valeurs avec un mot-clé */
object-fit: fill;
object-fit: contain;
object-fit: cover;
object-fit: none;
object-fit: scale-down;

/* Valeurs globales */
object-fit: inherit;
object-fit: initial;
object-fit: unset;

Valeurs : 
  [contain]
  Le contenu remplacé est dimensionné pour maintenir ses proportions tout en étant ajusté à la boîte de contenu : 
  sa taille réelle est résolue en utilisant la largeur et la hauteur de l'élément comme contraintes de contenant.

  [cover]
  Le contenu remplacé est dimensionné pour maintenir son ratio d'affichage tout en remplissant toute la boîte de contenu. 
  La taille réelle est calculée pour couvrir la zone décrite par la hauteur et la largeur de l'élément. 
  Si les ratios de l'objet et de la boîte ne correspondent pas, le contenu remplacé sera rogné.

  [fill]
  Le contenu remplacé est dimensionné pour remplir la boîte de contenu. La taille réelle de l'objet est déterminée 
  grâce à la hauteur et à la largeur de l'élément. Il est donc étiré afin de remplir la boîte.

  [none]
  Le contenu remplacé n'est pas redimensionné à l'intérieur de l'élément.

  [scale-down]
  Le contenu est dimensionné comme si none ou contain étaient spécifiés, 
  on prend celui qui aboutirait à une taille réelle plus petite.

3. Il est possible de modifier l'alignement du contenu de l'élément remplacé 
au sein de la boîte de l'élément grâce à la propriété object-position.


object-position Propriété
-------------------------------
1. La propriété object-position détermine l'alignement d'un élément remplacé au sein de sa boîte. 
Les zones de la boîtes qui ne sont pas recouvertes par le contenu de l'élément remplacé montreront l'arrière-plan de l'élément.

/* Valeurs de positionnement */
/* Type <position>           */
object-position: center top;
object-position: 100px 50px;

/* Valeurs globales */
object-position: inherit;
object-position: initial;
object-position: unset;

Valeurs : 
  [<position>]
  Une valeur de type <position>, c'est-à-dire une à quatre valeurs permettant de définir une position 
  en deux dimensions par rapport aux limites de la boîte dans laquelle est placé l'élément. 
  On peut donner des décalages absolus ou relatifs. On notera que la position peut être définie en dehors de la boîte de l'élément.

  EX:
  object-position: 50% 50%;
  object-position: right top;
  object-position: left bottom;
  object-position: 250px 125px;


Superposer deux div avec flexbox
-------------------------------
  EX :
  /* Every rule not marked by "required" is optional and used only to decorate the example */
  .block {
    margin: 10px 50px;
    display: flex; /* required */
    flex-flow: row nowrap; /* required */
  }
  .block .background,
  .block .foreground {
    box-sizing: border-box; /* required */
    width: 100%; /* required */
    flex: none; /* required */
  }
  .block .background {
    background: #9ff;
    color: #fff;
    padding: 15px;
    font-size: 30px;
  }
  .block .foreground {
    padding: 15px;
    border: solid 1px;
    margin-left: -100%; /* required */
  }
  .block .foreground .outside {
    position: absolute;
    top: 5px;
    left: 8px;
  }

  <div class="block">
    <div class="background">
        Background
    </div>
    <div class="foreground">
        <div>
            <div class="outside">Outside</div> <!-- The "outside" div is also optional -->
            <div>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Odio incidunt perspiciatis sapiente aspernatur repellat delectus atque quae optio nam? Pariatur explicabo laboriosam dolores temporibus molestiae error ipsa sunt molestias doloremque odio nemo iure similique quae exercitationem, adipisci, ullam dicta esse numquam beatae qui velit asperiores. Dolore, quo illum necessitatibus tempora earum nihil cumque corporis aut error eius voluptatibus quia, pariatur.</div>
        </div>
    </div>
  </div>